{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Typography, CardActions, CardContent, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  typography: {\n    h2: {\n      fontSize: 12\n    }\n  }\n});\n\nconst MostrarDatos = () => {\n  _s();\n\n  const classes = useStyles();\n  const [canales, setCanales] = useState(); //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  }; //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Aqui se crea la card de cada canal\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de canales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }, this), !canales ? 'Cargando data...' : canales.map((canal, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: \"titulo__cabecera\",\n              children: canal.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"numero__canal\",\n            children: canal.numero\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: canal.imagen,\n              alt: \"logo TVN de Chile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"cardFooter\",\n            children: [\"Se\\xF1al de \", canal.tipo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, canal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MostrarDatos, \"KERyVVRTze9cVNSQtNUnBaGX9To=\", false, function () {\n  return [useStyles];\n});\n\n_c = MostrarDatos;\nexport default MostrarDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostrarDatos\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx"],"names":["React","useState","useEffect","makeStyles","Card","Typography","CardActions","CardContent","Button","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","typography","h2","MostrarDatos","classes","canales","setCanales","getData","response","fetch","result","json","console","log","map","canal","index","nombre","numero","imagen","tipo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,EAAuCC,WAAvC,EAAoDC,MAApD,QAAkE,mBAAlE;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AACzBO,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADmB;AAIzBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJiB;AASzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GATkB;AAYzBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX,GAZoB;AAezBC,EAAAA,UAAU,EAAC;AACPC,IAAAA,EAAE,EAAC;AACCJ,MAAAA,QAAQ,EAAE;AADX;AADI;AAfc,CAAD,CAA5B;;AAsBA,MAAMK,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEF,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,EAAtC,CAJyB,CAMzB;;AAEA,QAAMyB,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,UAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAL,IAAAA,UAAU,CAACI,MAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,GALC,CARyB,CAe3B;;;AACI3B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAIF;AAAA;AACE;AACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,EAGK,CAACF,OAAD,GAEA,kBAFA,GAIDA,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACzB,4BAAQ,QAAC,IAAD;AAAqB,UAAA,SAAS,EAAEZ,OAAO,CAACb,IAAxC;AAAA,kCACR;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA,mCACA,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,kBAAnC;AAAA,wBAAuDwB,KAAK,CAACE;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADQ,eAGI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,eAAtB;AAAA,sBAAuCF,KAAK,CAACG;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAIR;AAAW,YAAA,SAAS,EAAC,SAArB;AAAA,mCACA;AAAK,cAAA,GAAG,EAAEH,KAAK,CAACI,MAAhB;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAOR;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA,uCAA4CJ,KAAK,CAACK,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPQ;AAAA,WAAWL,KAAK,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAR;AASH,OAVD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAwBD,CA5CD;;GAAMlB,Y;UAEcb,S;;;KAFda,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Typography, CardActions,CardContent, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    typography:{\n        h2:{\n            fontSize: 12\n        }\n    }\n  });\n\nconst MostrarDatos = () => {\n\n    const classes = useStyles();\n\n  const [canales, setCanales] = useState();\n\n  //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result)     \n}\n\n//Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n    useEffect(() => {\n      getData()\n    },[]);\n  \n  return (\n    //Aqui se crea la card de cada canal\n    <div>\n        <h1>Listado de canales</h1><br />\n\n        {!canales\n         ? \n         'Cargando data...'\n         :\n        canales.map((canal, index) =>{\n            return (<Card key={canal.id} className={classes.root}>\n            <container className=\"card-header\">\n            <Typography variant=\"h2\" className=\"titulo__cabecera\">{canal.nombre}</Typography>\n            </container><Typography className=\"numero__canal\">{canal.numero}</Typography>\n            <container className=\"picture\">\n            <img src={canal.imagen} alt=\"logo TVN de Chile\"></img>\n            </container>\n            <container className=\"cardFooter\">Se√±al de {canal.tipo}</container>\n            </Card>)\n        })\n        }\n        \n    </div>\n  );\n}\n\n\nexport default MostrarDatos;\n"]},"metadata":{},"sourceType":"module"}