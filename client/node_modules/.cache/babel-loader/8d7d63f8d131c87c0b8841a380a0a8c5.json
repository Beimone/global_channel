{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 80\n  },\n  typography: {\n    h2: 15\n  }\n});\n\nconst MostrarDatos = () => {\n  _s();\n\n  const classes = useStyles();\n  const [canales, setCanales] = useState(); //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  }; //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Aqui se crea la card de cada canal\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de canales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), !canales ? \"Cargando data...\" : canales.map((canal, index) => {\n        return /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h2\",\n                  className: \"titulo__cabecera\",\n                  children: canal.nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: \"numero__canal\",\n                children: canal.numero\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: canal.imagen,\n                title: canal.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [\"Se\\xF1al de \", canal.tipo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  color: \"primary\",\n                  children: \"Detalle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, canal.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MostrarDatos, \"KERyVVRTze9cVNSQtNUnBaGX9To=\", false, function () {\n  return [useStyles];\n});\n\n_c = MostrarDatos;\nexport default MostrarDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostrarDatos\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Container","useStyles","root","maxWidth","media","height","typography","h2","MostrarDatos","classes","canales","setCanales","getData","response","fetch","result","json","console","log","map","canal","index","nombre","numero","imagen","tipo","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 80,\n  },\n  typography:{\n    h2:15\n  }\n});\n\nconst MostrarDatos = () => {\n  const classes = useStyles();\n\n  const [canales, setCanales] = useState();\n\n  //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  };\n\n  //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    //Aqui se crea la card de cada canal\n    <div>\n      <h1>Listado de canales</h1>\n      <br />\n\n      {!canales\n        ? \"Cargando data...\"\n        : canales.map((canal, index) => {\n            return (\n                <Container>\n\n              <Card key={canal.id} className={classes.root}>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography variant=\"h2\" className=\"titulo__cabecera\">\n                      {canal.nombre}\n                    </Typography>\n                  </CardContent>\n                  <Typography className=\"numero__canal\">\n                    {canal.numero}\n                  </Typography>\n                  <CardMedia\n                    className={classes.media}                    \n                    image={canal.imagen}\n                    title={canal.nombre}\n                  />\n                  <CardContent>Se√±al de {canal.tipo}</CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      Detalle\n                    </Button>\n                  </CardActions>\n                </CardActionArea>\n              </Card>\n                    \n                </Container>\n            );\n          })}\n    </div>\n  );\n};\n\nexport default MostrarDatos;\n"]},"metadata":{},"sourceType":"module"}