{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    alignItems: 'center'\n  },\n  typography: {\n    h4: 10\n  },\n  espacio: {\n    gap: 10\n  }\n});\n\nconst MostrarDatos = () => {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [color, setColor] = useState(\"#ffffff\");\n  const override = {\n    display: \"block\",\n    margin: \"0 auto\",\n    borderColor: \"green\"\n  };\n  const [canales, setCanales] = useState(); //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  }; //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Aqui se crea la card de cada canal\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de canales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.espacio,\n        justify: \"center\",\n        children: !canales ? /*#__PURE__*/_jsxDEV(BeatLoader, {\n          color: \"#36d7b7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this) : canales.map((canal, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  className: classes.h4,\n                  children: canal.nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: \"numero__canal\",\n                children: canal.numero\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"picture\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: canal.imagen,\n                  alt: canal.nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [\"Se\\xF1al de \", canal.tipo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  href: \"#contained-buttons\",\n                  children: \"Detalle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, canal.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MostrarDatos, \"OPZsIt2E8OmHpIgoFIFkMsWFWbk=\", false, function () {\n  return [useStyles];\n});\n\n_c = MostrarDatos;\nexport default MostrarDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostrarDatos\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx"],"names":["React","useState","useEffect","BeatLoader","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","useStyles","root","minWidth","alignItems","typography","h4","espacio","gap","MostrarDatos","classes","loading","setLoading","color","setColor","override","display","margin","borderColor","canales","setCanales","getData","response","fetch","result","json","console","log","map","canal","index","nombre","numero","imagen","tipo","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\"\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    alignItems:  'center',\n  },\n  typography:{\n    h4:10\n  },\n  espacio:{\n    gap:10\n  },\n  \n  \n});\n\n\nconst MostrarDatos = () => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [color, setColor] = useState(\"#ffffff\");\n\n    const override: CSSProperties = {\n        display: \"block\",\n        margin: \"0 auto\",\n        borderColor: \"green\",\n      };\n    \n  const [canales, setCanales] = useState();\n\n  //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  };\n\n  //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  return (\n    //Aqui se crea la card de cada canal\n    <div>\n      <h1>Listado de canales</h1>\n      <br />\n      <Grid container className={classes.espacio} justify=\"center\">    \n        {!canales\n        ? \n        \n        <BeatLoader color=\"#36d7b7\" />\n        : \n        canales.map((canal, index) => {\n            return (\n                <Card key={canal.id} className={classes.root}>\n                  <CardActionArea>\n                    <CardContent>\n                      <Typography variant=\"h4\" className={classes.h4}>\n                        {canal.nombre}\n                      </Typography>\n                    </CardContent>\n                    <Typography className=\"numero__canal\">\n                      {canal.numero}\n                    </Typography>\n                    <div className=\"picture\">\n                        <img src={canal.imagen} alt={canal.nombre}></img>\n                    </div>                    \n                    <CardContent>Señal de {canal.tipo}</CardContent>\n                    <CardActions>\n                      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n                        Detalle\n                      </Button>\n                    </CardActions>\n                  </CardActionArea>\n                </Card>\n            );\n        })\n    }\n    </Grid>\n    </div>\n  );\n};\n\nexport default MostrarDatos;\n"]},"metadata":{},"sourceType":"module"}