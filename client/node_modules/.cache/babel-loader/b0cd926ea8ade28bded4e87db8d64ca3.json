{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({}));\n\nconst MostrarDatos = () => {\n  _s();\n\n  const classes = useStyles;\n  const [canales, setCanales] = useState(); //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  }; //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Aqui se crea la card de cada canal\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de canales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 36\n      }, this), !canales ? 'Cargando data...' : canales.map((canal, index) => {\n        return /*#__PURE__*/_jsxDEV(\"container\", {\n          className: \"card-principal\",\n          children: [/*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"titulo__cabecera\",\n              children: canal.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"numero__canal\",\n            children: canal.numero\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: canal.imagen,\n              alt: \"logo TVN de Chile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"container\", {\n            className: \"cardFooter\",\n            children: [\"Se\\xF1al de \", canal.tipo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, canal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MostrarDatos, \"bhmHP9BvdBs9/GnkwYKWFlsQ4jc=\");\n\n_c = MostrarDatos;\nexport default MostrarDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostrarDatos\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx"],"names":["React","useState","useEffect","Typography","useStyles","makeStyles","MostrarDatos","classes","canales","setCanales","getData","response","fetch","result","json","console","log","map","canal","index","nombre","numero","imagen","tipo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAC,OAAK,EAAL,CAAD,CAA5B;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,OAAO,GAAGH,SAAhB;AAEF,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC,CAJyB,CAMzB;;AAEA,QAAMS,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,UAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAL,IAAAA,UAAU,CAACI,MAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,GALC,CARyB,CAe3B;;;AACIX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAIF;AAAA;AACE;AACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,EAGK,CAACF,OAAD,GAEA,kBAFA,GAIDA,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACzB,4BAAQ;AAA0B,UAAA,SAAS,EAAC,gBAApC;AAAA,kCACR;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA,mCACA;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,wBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADQ,eAGI;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,sBAA8BF,KAAK,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAIR;AAAW,YAAA,SAAS,EAAC,SAArB;AAAA,mCACA;AAAK,cAAA,GAAG,EAAEH,KAAK,CAACI,MAAhB;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAOR;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA,uCAA4CJ,KAAK,CAACK,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPQ;AAAA,WAAgBL,KAAK,CAACM,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAAR;AASH,OAVD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAwBD,CA5CD;;GAAMlB,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(()=>({\n\n}))\n\nconst MostrarDatos = () => {\n\n    const classes = useStyles\n\n  const [canales, setCanales] = useState();\n\n  //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result)     \n}\n\n//Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n    useEffect(() => {\n      getData()\n    },[]);\n  \n  return (\n    //Aqui se crea la card de cada canal\n    <div>\n        <h1>Listado de canales</h1><br />\n\n        {!canales\n         ? \n         'Cargando data...'\n         :\n        canales.map((canal, index) =>{\n            return (<container key={canal.id} className=\"card-principal\">\n            <container className=\"card-header\">\n            <h2 className=\"titulo__cabecera\">{canal.nombre}</h2>\n            </container><p className=\"numero__canal\">{canal.numero}</p>\n            <container className=\"picture\">\n            <img src={canal.imagen} alt=\"logo TVN de Chile\"></img>\n            </container>\n            <container className=\"cardFooter\">Se√±al de {canal.tipo}</container>\n            </container>)\n        })\n        }\n        \n    </div>\n  );\n}\n\n\nexport default MostrarDatos;\n"]},"metadata":{},"sourceType":"module"}