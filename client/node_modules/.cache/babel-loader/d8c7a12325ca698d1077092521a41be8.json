{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 250,\n    alignItems: 'center'\n  },\n  typography: {\n    fontSize\n  }\n});\n\nconst MostrarDatos = () => {\n  _s();\n\n  const classes = useStyles();\n  const [canales, setCanales] = useState(); //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  }; //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Aqui se crea la card de cada canal\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de canales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), !canales ? \"Cargando data...\" : canales.map((canal, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                className: \"titulo__cabecera\",\n                children: canal.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"numero__canal\",\n              children: canal.numero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"picture\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: canal.imagen,\n                alt: canal.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [\"Se\\xF1al de \", canal.tipo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                href: \"#contained-buttons\",\n                children: \"Detalle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, canal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MostrarDatos, \"KERyVVRTze9cVNSQtNUnBaGX9To=\", false, function () {\n  return [useStyles];\n});\n\n_c = MostrarDatos;\nexport default MostrarDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostrarDatos\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/MostrarDatos.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","useStyles","root","maxWidth","alignItems","typography","fontSize","MostrarDatos","classes","canales","setCanales","getData","response","fetch","result","json","console","log","map","canal","index","nombre","numero","imagen","tipo","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 250,\n    alignItems:  'center',\n  },\n  typography:{\n    fontSize\n  }\n  \n  \n});\n\nconst MostrarDatos = () => {\n  const classes = useStyles();\n\n  const [canales, setCanales] = useState();\n\n  //Funcion getData crea la llamada a la URL de ApiChannel\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5001/api/channels\");\n    const result = await response.json();\n    setCanales(result);\n    console.log(result);\n  };\n\n  //Utilizamos el metodo de useEffect para para hacer la llamada, y que se ejecute una sola vez\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    //Aqui se crea la card de cada canal\n    <div>\n      <h1>Listado de canales</h1>\n      <br />\n\n        {(!canales)\n        ? \n        \"Cargando data...\"\n        : \n      \n        canales.map((canal, index) => {\n            return (\n                <Card key={canal.id} className={classes.root}>\n                  <CardActionArea>\n                    <CardContent>\n                      <Typography variant=\"h4\" className=\"titulo__cabecera\">\n                        {canal.nombre}\n                      </Typography>\n                    </CardContent>\n                    <Typography className=\"numero__canal\">\n                      {canal.numero}\n                    </Typography>\n                    <div className=\"picture\">\n                        <img src={canal.imagen} alt={canal.nombre}></img>\n                    </div>                    \n                    <CardContent>Se√±al de {canal.tipo}</CardContent>\n                    <CardActions>\n                      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n                        Detalle\n                      </Button>\n                    </CardActions>\n                  </CardActionArea>\n                </Card>\n            );\n        })\n        \n        }\n    </div>\n  );\n};\n\nexport default MostrarDatos;\n"]},"metadata":{},"sourceType":"module"}