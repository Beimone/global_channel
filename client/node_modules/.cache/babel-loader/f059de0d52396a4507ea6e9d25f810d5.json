{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/RenderingConditional.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderingConditional = () => {\n  _s();\n\n  const [isMostrar, setIsMostrar] = useState(true);\n\n  const handlClickDisplay = () => {\n    setIsMostrar;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isMostrar ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hola aqui estoy \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlClickDisplay(true),\n        children: \"Ir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Me acabo de ir \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlClickDisplay(false),\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 125\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 107\n    }, this)\n  }, void 0, false);\n};\n\n_s(RenderingConditional, \"FH5A2ZSjgB1yFiNOkzaMvf4pQsQ=\");\n\n_c = RenderingConditional;\nexport default RenderingConditional;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderingConditional\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/RenderingConditional.jsx"],"names":["React","useState","RenderingConditional","isMostrar","setIsMostrar","handlClickDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMI,iBAAiB,GAAG,MAAI;AAC1BD,IAAAA,YAAY;AACf,GAFD;;AAIA,sBACI;AAAA,cACMD,SAAS,gBAAG;AAAA,kDAAmB;AAAQ,QAAA,OAAO,EAAEE,iBAAiB,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmF;AAAA,iDAAkB;AAAQ,QAAA,OAAO,EAAEA,iBAAiB,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADlG,mBADJ;AAKH,CAbD;;GAAMH,oB;;KAAAA,oB;AAeN,eAAeA,oBAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst RenderingConditional = () => {\n\n    const [isMostrar, setIsMostrar] = useState(true)\n\n    const handlClickDisplay = ()=>{\n        setIsMostrar\n    }\n\n    return ( \n        <>\n            {(isMostrar ? <p>Hola aqui estoy <button onClick={handlClickDisplay(true)} >Ir</button></p> : <p>Me acabo de ir <button onClick={handlClickDisplay(false)} >Volver</button></p>)}\n        </>\n     );\n}\n \nexport default RenderingConditional;"]},"metadata":{},"sourceType":"module"}