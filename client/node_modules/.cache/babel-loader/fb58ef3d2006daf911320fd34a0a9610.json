{"ast":null,"code":"var _jsxFileName = \"/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/RenderingConditional.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderingConditional = _ref => {\n  _s();\n\n  let {\n    canales\n  } = _ref;\n  const [isMostrar, setIsMostrar] = useState(true);\n\n  const handlMostrar = _ref2 => {\n    let {\n      calaes\n    } = _ref2;\n    console.log(e);\n    const channel = canales.map((canal, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: canal.nombre\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: channel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMostrar ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hola aqui estoy \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMostrar(false),\n        children: \"Ir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Me acabo de ir \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMostrar(true),\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 125\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlMostrar,\n      children: \"Mostrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderingConditional, \"FH5A2ZSjgB1yFiNOkzaMvf4pQsQ=\");\n\n_c = RenderingConditional;\nexport default RenderingConditional;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderingConditional\");","map":{"version":3,"sources":["/home/jsepulveda/Documentos/proyectos/react-proyecto-base/src/components/RenderingConditional.jsx"],"names":["React","useState","RenderingConditional","canales","isMostrar","setIsMostrar","handlMostrar","calaes","console","log","e","channel","map","canal","index","nombre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,oBAAoB,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAGxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMK,YAAY,GAAG,SAAa;AAAA,QAAZ;AAACC,MAAAA;AAAD,KAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACA,UAAMC,OAAO,GAAGR,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,0BAAO;AAAA,kBAAiBD,KAAK,CAACE;AAAvB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAHe,CAAhB;AAIA,wBAAO;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,GARD;;AASI,sBACA;AAAA,eACMP,SAAS,gBAAG;AAAA,kDAAmB;AAAQ,QAAA,OAAO,EAAE,MAAIC,YAAY,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmF;AAAA,iDAAkB;AAAQ,QAAA,OAAO,EAAE,MAAIA,YAAY,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADlG,eAEI;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADA;AAOP,CArBD;;GAAMJ,oB;;KAAAA,oB;AAuBN,eAAeA,oBAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst RenderingConditional = ({canales}) => {\n    \n\n    const [isMostrar, setIsMostrar] = useState(true)\n\n    const handlMostrar = ({calaes}) =>{\n        console.log(e)\n        const channel = canales.map((canal, index) => {\n            return <li key={index}>{canal.nombre}</li>\n\n        });\n        return <ul>{channel}</ul>\n\n    }\n        return ( \n        <>\n            {(isMostrar ? <p>Hola aqui estoy <button onClick={()=>setIsMostrar(false)} >Ir</button></p> : <p>Me acabo de ir <button onClick={()=>setIsMostrar(true)} >Volver</button></p>)}\n            <button onClick={handlMostrar}>Mostrar</button>\n            \n        </>\n     );\n}\n \nexport default RenderingConditional;"]},"metadata":{},"sourceType":"module"}